<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/jms
http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
http://activemq.apache.org/schema/core
http://activemq.apache.org/schema/core/activemq-core.xsd
http://www.springframework.org/schema/jdbc
http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!-- Component Scan der Services (Twitter ect.) -->
    <context:component-scan base-package="de.fhkoeln.eis.radioexpert.server"/>

    <!-- JMS Message Broker (hier ActiveMQ) -->
    <amq:broker persistent="false" useJmx="false">
        <amq:transportConnectors>
            <amq:transportConnector uri="tcp://localhost:62626"/>
        </amq:transportConnectors>
    </amq:broker>

    <!-- Topics und Connectionfactory ausgelagert fuer gemeinsame Nutzung-->
    <import resource="jmsConnectionAndTopics.xml"/>

    <!-- Services fuer topics abbonieren (alle Nachrichten in Datenbank schreiben)-->
    <jms:listener-container connection-factory="jmsConnectionFactory" destination-type="topic">
        <jms:listener destination="director" ref="databaseListener"/>
        <!-- TODO: TOPICS -->
    </jms:listener-container>
    <!-- Services fuer queues abbonieren -->
    <jms:listener-container connection-factory="jmsConnectionFactory" destination-type="queue">
        <jms:listener destination="persistence.request" ref="databaseController"/>
    </jms:listener-container>

    <!-- h2 dataSource definieren -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"
          p:driverClassName="org.h2.Driver"
          p:url="jdbc:h2:tcp://localhost/radioexpert"
          p:username="radioexpert"
          p:password="radioexpert"/>

    <!-- hibernate sessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="annotatedClasses">
            <list>
                <value>de.fhkoeln.eis.radioexpert.messaging.messages.TwitterMessage</value>
                <value>de.fhkoeln.eis.radioexpert.messaging.messages.FacebookMessage</value>
                <value>de.fhkoeln.eis.radioexpert.messaging.messages.MailMessage</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <value>
                hibernate.hbm2ddl.auto=create
                hibernate.dialect=org.hibernate.dialect.H2Dialect
                hibernate.show_sql=true
            </value>
        </property>
    </bean>

    <!-- Hibernate Transaktions definition -->
    <tx:annotation-driven transaction-manager="txManager"/>
    <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

</beans>